SysLog_LogFormatted (&4C88B)
#Parent SysLog_
=>	R0 =	session log handle
	R1 =	<format string=>.format>
	R2 =	<priority=>SysLog_priorities>
	R3 =	pointer block containing r0-r3, r8-r12 and r14
	R4-R7 =	parameters

Appends a 'formatted string' to the log using the registers specifed.

Usually you'd use code like this to call LogFormatted :
#Tab ,fCode,fCode,f/
   	STMFD	(sp)!,\{r0-r3,r8-r12,link\}	 
	ADR	r0,ourlogname			the log name
	ADD	r1,pc,#12			the format string
	MOV	r2,#124				the priority
	MOV	r3,sp				the block of registers
	SWI	"SysLog_LogFormatted"
	B	P%+(LENt$+8)ANDNOT3
	EQUS	t$+STRING$(4-(LENt$AND3),CHR$0)
	LDMFD	(sp)!,\{r0-r3,r8-r12,link\}
#fCode
#
#Subpage format
SysLog_LogFormatted format string
These strings are in a similar style to the C 'printf', or JFPatch 'REM' output format strings. The format string is a template for which the following sequences will be expanded :

Sequence	Expansion
#line
%%		a % character
%\<reg\>a	the network ordered ip address in register \<reg\>
%\<reg\>c	the ascii character in register \<reg\>
%\<reg\>d	the signed decimal number in register \<reg\>
%\<reg\>e	the internet error in register \<reg\>
%\<reg\>f	the filename of the handle in register \<reg\>
%\<reg\>p	the object pointed to by register \<reg\>
		(Note: This should be followed by one of the other qualifiers in this list)
%\<reg\>s	the ctrl terminated string pointed to by register \<reg\>
%\<reg\>x	the unsigned hex integer in register \<reg\>
%\<reg\>z	the zero terminated string pointed to by register \<reg\>
